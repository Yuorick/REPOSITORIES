//---------------------------------------------------------------------------

#ifndef OutPutAeroShotH
#define OutPutAeroShotH
// класс описывает массив выходной информации по отдельному выстрелу по воздушной цели
// это удобно для визуализации результатов
class TOutPutAeroShot
{
public:
//
double mTshot;
//
double marrVS_GSK_Vessel[6];
//
double marrVS_GSK_Targ[6];
//
double mEpsKGSK;
//
double mBetKGSK;
//
double marrKTarg[36];
//
double marrKShell[36];


	// конструктор по умолчанию
	TOutPutAeroShot () ;
	// конструктор копирования
	TOutPutAeroShot  (const TOutPutAeroShot  &R) ;

	// оператор присваивания
	TOutPutAeroShot  operator=(TOutPutAeroShot   R2) ;
   // параметрическийц конструктор
	 TOutPutAeroShot( enumShellType EnumShellType) ;
	 // параметрическийц конструктор
	TOutPutAeroShot( enumShellType EnumShellType, const TDetonator Detonator);


	  void fnkCxEtal (const  double valM,  double &val_CxEtal, double &val_Grad_CxEtal) ;
	  void fnkMxOmegax (const  double valM,  double &val_MxOmegax, double &val_Grad_MxOmegax) ;
	  void fnkKnm (const  double valM,  double &val_Knm, double &val_Grad_Knm)  ;
	 double calcBallisticCoeff();
	 void fnkIx0 (const  double valTet0,  double &val_ix, double &val_Grad_ix);
	 void fnkIz0 (const  double valTet0,  double &val_iz, double &val_Grad_iz) ;

	 void fillShellVozmDispMatr_ShootingEarth (const double VAlSigTechAngAU
, const double VAlSigPiAtm, double *arrMtrxShellDisp);
	 double fnkCz (const  double valM);
}  ;

#endif

//---------------------------------------------------------------------------

#ifndef CoatTargNeibourhoodH
#define CoatTargNeibourhoodH
class TURPointXY;
class TCoastTargNeighbourhood
{
 public:
// static void calcOptimalDestructionProb_For_GroupLinedPoints (const int  QAantIspit, double *parrMtrxCorr
//	,const double VAlKillingRange, const int QUantShells,const int  In, double *parrTargX, const int LEnarrX
//	, double *parrAimingPoints, int *piarrRepeatQuants, int *pQuantAimingPoints, TURPointXY *ppntArrAimingPoints_SKT
//	, double *pvalProb);

 static bool calcOptimalArray_Of_AimPoints_ForGroupLinedPoints(double *arrElK
	,const double VAlKillingRange, const int QUantShells,const int  In, double *parrZ, const int LEnarrZ
	, double *parrAimingPoints, int *piarrRepeatQuants, int *pQuantAimingPoints, double &valObj, TURPointXY *pPntArrDensity);

static double calcMinObjectFunc_AlongWithLine(double *parr_L, const int LEnarrZ
				 ,const int In,double * parrX, double * parrXZv, double *parrRez) ;

static void calc_d2FGr_po_dx(double *parr_L, const int LEnarrZ
				 ,const int In,double * parrX, double *arr_d2FGr_po_dx);

static void  calcGradFGr(double *parr_L, const int LEnarrZ
				 ,const int In,double * parrX,double * arrGrad);

static double calcFi_i(double *parr_L, const int LEnarrZ
				 ,const int In,double * parrX, const int NUmi);

static double calcFGr(double *parr_L, const int LEnarrZ
				 ,const int In,double * parrX);


static double _MAX_double( double x, double y)
{
	return (x>y)?x:y;
}

};
#endif

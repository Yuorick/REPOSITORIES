//---------------------------------------------------------------------------


#pragma hdrstop
#include <math.h>

#include "EtalonSign.h"


__fastcall  TEtalonSign::TEtalonSign()
{
  // амлитуда
	mEtalonAmp =0.;
 //дальность
	mEtalonDist =0.;
 //ЭПР
	mEtalonEPR =0.;
 //СКО внутр шума суммарной диаграммы 5П10
	mNoiseSKZ_5P10 =0.;
 // СКЗ разброса коэффиц усиления суммарной диаграммы 5П10
	mEtalonSigAmplFact_5P10 =0.;
 // мощность на передачу
	mEtalonPowerPrd =0.;
 // КУ на передачу
	mEtalonKYPrd =0.;
 // мощность на прием
	mEtalonKYPriem =0.;

}
// Конструктор копирования
__fastcall  TEtalonSign::TEtalonSign (const TEtalonSign &R)
 {
	// амлитуда
	mEtalonAmp = R.mEtalonAmp;
	//дальность
	mEtalonDist = R.mEtalonDist;
	//ЭПР
	mEtalonEPR = R.mEtalonEPR;
	//СКО внутр шума суммарной диаграммы 5П10
	mNoiseSKZ_5P10 = R.mNoiseSKZ_5P10;
	// СКЗ разброса коэффиц усиления суммарной диаграммы 5П10
	mEtalonSigAmplFact_5P10 = R.mEtalonSigAmplFact_5P10;
	mEtalonPowerPrd = R. mEtalonPowerPrd;
	mEtalonKYPrd = R.mEtalonKYPrd;
	mEtalonKYPriem = R.mEtalonKYPriem;
 }

 // оператор присваивания
  TEtalonSign TEtalonSign::operator=(TEtalonSign  R)
 {
	// амлитуда
	mEtalonAmp = R.mEtalonAmp;
	//дальность
	mEtalonDist = R.mEtalonDist;
	//ЭПР
	mEtalonEPR = R.mEtalonEPR;
	//СКО внутр шума суммарной диаграммы 5П10
	mNoiseSKZ_5P10 = R.mNoiseSKZ_5P10;
	// СКЗ разброса коэффиц усиления суммарной диаграммы 5П10
	mEtalonSigAmplFact_5P10 = R.mEtalonSigAmplFact_5P10;
	mEtalonPowerPrd = R. mEtalonPowerPrd;
	mEtalonKYPrd = R.mEtalonKYPrd;
	mEtalonKYPriem = R.mEtalonKYPriem;
	 return *this ;
 }

 // парам констр 1
 __fastcall TEtalonSign::TEtalonSign(const double EtalonAmp,const double EtalonDist, const double EtalonAPR
   , const double NoiseSKZ_5P10, const double EtalonSigAmplFact_5P10)
 {
	 mEtalonAmp = EtalonAmp;
	 mEtalonDist = EtalonDist;;
	 mEtalonEPR = EtalonAPR;
	 mNoiseSKZ_5P10 = NoiseSKZ_5P10;
	 mEtalonSigAmplFact_5P10 = EtalonSigAmplFact_5P10;
 }

  // парам констр 2
 __fastcall TEtalonSign::TEtalonSign(const double EtalonAmp,const double EtalonDist, const double EtalonAPR
   , const double NoiseSKZ_5P10, const double EtalonSigAmplFact_5P10, const double EtalonPowerPrd,  const double  EtalonKYPrd
   , const double EtalonKYPriem)
 {
	 mEtalonAmp = EtalonAmp;
	 mEtalonDist = EtalonDist;;
	 mEtalonEPR = EtalonAPR;
	 mNoiseSKZ_5P10 = NoiseSKZ_5P10;
	 mEtalonSigAmplFact_5P10 = EtalonSigAmplFact_5P10;
	 mEtalonPowerPrd = EtalonPowerPrd;
	 mEtalonKYPrd = EtalonKYPrd;
	 mEtalonKYPriem = EtalonKYPriem;
 }
// отнлшение шум/сигнал
 double TEtalonSign::calcNWaveEtalon()
 {

 //return  sqrt( mNoiseSKZ_5P10 *  mNoiseSKZ_5P10 /  mEtalonAmp/  mEtalonAmp
 //		 +  mEtalonSigAmplFact_5P10 *  mEtalonSigAmplFact_5P10);
 return    mNoiseSKZ_5P10 /  mEtalonAmp;
 }


#pragma package(smart_init)

